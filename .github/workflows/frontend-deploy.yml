name: Deploy Frontend to S3 & CloudFront

on:
  push:
    branches:
      - main # Trigger on pushes to the 'main' branch
    paths:
      - "frontend/**" # <-- This means "any change inside the frontend/ directory"

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20" # Use your desired Node.js version

      - name: Navigate to frontend directory and install dependencies
        run: |
          cd frontend/
          npm install

      - name: Build frontend for production
        # This command injects your production API URL into the build
        # using the REACT_APP_API_URL environment variable.
        run: |
          cd frontend/
          REACT_APP_API_URL=${{ secrets.REACT_APP_API_URL_PROD }} npm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1 # Ensure this matches your S3 bucket and CloudFront region

      - name: Deploy static files to S3 bucket
        # Syncs the contents of the 'frontend/build' directory to your S3 bucket.
        # --delete ensures old files are removed from S3 if they no longer exist in the build.
        run: |
          aws s3 sync frontend/build/ s3://${{ secrets.S3_BUCKET_NAME }} --delete

      - name: Create CloudFront invalidation
        # Invalidates the CloudFront cache for all paths (/*) to ensure new content is served.
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths "/*"
